#!/usr/bin/nu
# vim: ft=nu

let tobackup = [@, @home]

def backup [name: string] {
  let src = $name | str replace -r '^' '/btrfs-root/'
  let dater = date now | date to-record
  let datef = $dater | get year month day | str join '-'
  let dates = $dater | get hour minute second | str join ':'
  let date = $"($datef)T($dates)"
  let dest = $name | each { |s| '/btrfs-root/snapshots/@' + $s + '-' + $date}
  sudo btrfs subvolume snapshot -r $src $dest
}

def deleteOutOfDate [] {
  let datenow = date now | into int
  let tocheck = ls /btrfs-root/snapshots | get name
  let dateold = $tocheck | str replace -r '^.*@@[[:alnum:]]*-' ''
  let todelete = $dateold | enumerate | where $datenow - ($it.item | into datetime | into int) > 259200000000000
  $todelete | each { |it| sudo btrfs subvolume delete ($tocheck | get $it.index) }
}

def main [
  --backup (-b)
  --clean (-c)
] {
  mkdir /btrfs-root/snapshots
  if $backup and (not $clean) {
    $tobackup | each { |x| backup $x }
  } else if (not $backup) and $clean {
    deleteOutOfDate
  } else {
    deleteOutOfDate
    $tobackup | each { |x| backup $x }
  }
  null
}
